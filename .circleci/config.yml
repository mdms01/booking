# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.7.0
  aws-ecs: circleci/aws-ecs@0.0.11
  aws-eks: circleci/aws-eks@1.0.3
  kubernetes: circleci/kubernetes@0.4.0

jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Setup common environment variables
          command: |
            echo 'export ECR_REPOSITORY_NAME="${AWS_RESOURCE_NAME_PREFIX}"' >> $BASH_ENV
            echo 'export FULL_IMAGE_NAME="${AWS_ECR_ACCOUNT_URL}:latest"' >> $BASH_ENV
      - run:
          name: Install dependencies for AWS
          command: |
            sudo apt-get update
            sudo apt-get -y -qq install awscli
            sudo apt-get install python3-pip
            sudo pip3 install --upgrade awscli

      # run tests!
      - run: gradle build
      - run:
          name: Build image
          command: |
            docker build -t $FULL_IMAGE_NAME .
      - run:
          name: Push image
          command: |
            eval $(aws ecr get-login --region $AWS_REGION --no-include-email)
            docker push $FULL_IMAGE_NAME
  test-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: eu-west-1
      - run:
          command: |
            kubectl get services
          name: Main cluster
  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: eu-west-1
          install-kubectl: true
          verbose: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: cicd/k8s/booking/deployment.yaml
          resource-name: deployment/booking-deployment
workflows:
  deployment:
    jobs:
      - build
      - test-cluster:
          cluster-name: booking-cluster
          aws-region: eu-west-1
      - create-deployment:
          cluster-name: booking-cluster
          requires:
            - build
      - aws-eks/update-container-image:
          cluster-name: booking-cluster
          container-image-updates: 'booking=316826375590.dkr.ecr.eu-west-1.amazonaws.com/therapie:latest'
          post-steps:
            - kubernetes/delete-resource:
                resource-names: deployment/booking-deployment
                resource-types: deployment
                wait: true
          record: true
          requires:
            - create-deployment
          resource-name: deployment/booking-deployment


